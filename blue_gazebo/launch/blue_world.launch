<launch>
  <arg
    name="version"
    default="2" />
  <param
    name="version"
    value="$(arg version)" />

  <remap
    from="/left_arm/joint_states"
    to="/joint_states" />
  <remap
    from="/right_arm/joint_states"
    to="/joint_states" />

  <include
    file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find blue_gazebo)/worlds/empty_world.world"/>
  </include>

  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />

  <!-- Convert xacro and put on parameter server -->
  <param
    name="robot_description"
    command="$(find xacro)/xacro --inorder $(find blue_descriptions)/robots/blue_full_v$(arg version).urdf.xacro is_gazebo:=true" />
  <node
    name="spawn_blue"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-param robot_description -urdf -model blue_full -z 0.965"
    output="screen"/>


  <include
    file="$(find blue_gazebo)/launch/_single_arm_gazebo.launch">
    <arg name="side" value="right"/>
  </include>

  <include
    file="$(find blue_gazebo)/launch/_single_arm_gazebo.launch">
    <arg name="side" value="left"/>
  </include>

  <node
    name="rviz"
    pkg="rviz"
    type="rviz"
    args="-d $(find blue_bringup)/config/blue.rviz" />

  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher"
    respawn="false"
    output="screen">
  </node>

  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" />

</launch>
